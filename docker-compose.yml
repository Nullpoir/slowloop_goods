version: "3.7"

x-app: &app
  build:
    context: .
  depends_on:
    - db
    - kvs
    - minio
  environment:
    DB_HOST: db
    DB_USER: root
    DB_PASSWORD: ""
    KVS_HOST: kvs
    SSH_AUTH_SOCK: /run/host-services/ssh-auth.sock
    AWS_REGION: ${AWS_REGION}
    AWS_BUCKET: ${AWS_BUCKET}
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    API_CORS_ALLOW_ORIGIN: $API_CORS_ALLOW_ORIGIN
    MINIO_ENDPOINT: ${MINIO_ENDPOINT}
    MAINTENANCE_MODE: ${MAINTENANCE_MODE}
  volumes:
    - .:/app:cached
    - gem-local:/usr/local/bundle
    - /app/tmp
    - ./tmp/letter_opener:/app/tmp/letter_opener
    - type: bind
      source: /run/host-services/ssh-auth.sock
      target: /run/host-services/ssh-auth.sock

services:
  db:
    platform: linux/x86_64
    image: mysql:5.7
    command: --character-set-server=utf8 --collation-server=utf8_unicode_ci --ft_min_word_len=1 --explicit_defaults_for_timestamp=1
    ports:
      - '${HOST_MYSQL_PORT:-3306}:3306'
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - db-local:/var/lib/mysql
      - ./tmp/dump:/tmp/dump
  kvs:
    image: redis:6.0
    volumes:
      - kvs-local:/data
  web:
    <<: *app
    ports:
      - "3000:3000"
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    stdin_open: true
    tty: true
  worker:
    <<: *app
    depends_on:
      - web
    command: bundle exec sidekiq
  minio:
    image: minio/minio:latest
    environment:
      MINIO_REGION_NAME: ${AWS_REGION}
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
      MINIO_API_CORS_ALLOW_ORIGIN: $API_CORS_ALLOW_ORIGIN
      MINIO_DOMAIN: localhost
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data-local:/data
      - minio-config-local:/root/.minio
    command: server /data --console-address :9001
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio $MINIO_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY) do echo ...waiting... && sleep 1; done;
      /usr/bin/mc mb --region $AWS_REGION myminio/$AWS_BUCKET;
      /usr/bin/mc policy set public myminio/$AWS_BUCKET;
      exit 0;
      "
  nginx:
    build:
      context: ./nginx
      target: nginx-base
    environment:
      - NGINX_UPSTREAM=web:3000
    command: ['nginx-debug', '-g', 'daemon off;']
    ports:
      - 8080:80
      - 81:12345
    depends_on:
      - web

volumes:
  gem-local:
    driver: "local"
  db-local:
    driver: "local"
  kvs-local:
    driver: "local"
  minio-data-local:
    driver: "local"
  minio-config-local:
    driver: "local"
